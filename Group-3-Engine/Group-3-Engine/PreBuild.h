//Do not edit this file
//It is recreated on build
#pragma once
#include "BaseComponent.h"
#include "ComponentPtr.h"
#include "Scene.h"
#include <json.hpp>
#include <string>
#include <vector>
#include <map>

class AIAgent;
class AnimatorComponent;
class AudioComponent;
class CameraComponent;
class Collider;
class ColliderRenderComponent;
class CollisionManager;
class FlappyCatController;
class InputObserverComponent;
class NavigationComponent;
class PhysicsComponent;
class PlayerControllerComponent;
class PostProcessRenderComponent;
class RenderComponent;
class RotatorComponent;
class SpriteRenderComponent;
class SteeringBehaviourComponent;
class TextRenderComponent;
class TilemapRenderComponent;
class TimerManager;
class TransformComponent;
class UnusedClearComponent;
class VirtualButtonComponent;

ComponentPtr<BaseComponent> CreateComponent(Scene& scene, unsigned int id);
std::vector<std::string> GetAllComponentTypeNames();
std::map<std::string, unsigned int> GetComponentStringIDMap();

void to_json(nlohmann::json& json, const ComponentPtr<AIAgent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<AnimatorComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<AudioComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<CameraComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<Collider>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<ColliderRenderComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<CollisionManager>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<FlappyCatController>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<InputObserverComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<NavigationComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<PhysicsComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<PlayerControllerComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<PostProcessRenderComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<RenderComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<RotatorComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<SpriteRenderComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<SteeringBehaviourComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<TextRenderComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<TilemapRenderComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<TimerManager>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<TransformComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<UnusedClearComponent>& componentPtr);
void to_json(nlohmann::json& json, const ComponentPtr<VirtualButtonComponent>& componentPtr);

void from_json(const nlohmann::json& json, ComponentPtr<AIAgent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<AnimatorComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<AudioComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<CameraComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<Collider>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<ColliderRenderComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<CollisionManager>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<FlappyCatController>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<InputObserverComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<NavigationComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<PhysicsComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<PlayerControllerComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<PostProcessRenderComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<RenderComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<RotatorComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<SpriteRenderComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<SteeringBehaviourComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<TextRenderComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<TilemapRenderComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<TimerManager>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<TransformComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<UnusedClearComponent>& componentPtr);
void from_json(const nlohmann::json& json, ComponentPtr<VirtualButtonComponent>& componentPtr);
